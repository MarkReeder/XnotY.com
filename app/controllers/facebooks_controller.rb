class FacebooksController < ApplicationController
  # Must be authenticated in order to hit the destroy action
  before_filter :require_authentication, :only => :destroy
  
  rescue_from Rack::OAuth2::Client::Error, :with => :oauth2_error

  # handle Facebook Auth Cookie generated by JavaScript SDK
  def show
    auth = Facebook.auth.from_cookie(cookies)
    authenticate Facebook.identify(auth.user)
    redirect_to root_url
  end

  # handle Normal OAuth flow: callback
  def create
    # TODO verify facebook_id and code are both non-nil, plausible values.
    access_token = params[:code]
    facebook_id = params[:facebook_id]
    
    existing_user = User.where(facebook_id: facebook_id).first
    user = nil
    if existing_user
      user = existing_user
    else
      fb_user = FbGraph::User.me(access_token).fetch
      logger.info("fb_user: #{fb_user.inspect}")
      user = User.create!(facebook_id: facebook_id,
                          first_name: fb_user.first_name,
                          last_name: fb_user.last_name,
                          email: fb_user.email,
                          auth_token: access_token)
    end
    
    authenticate user

    render( json: {success: true, name: user.first_name, 
              redirect_to: '/'},
              status: :created)
  end

  def destroy
    unauthenticate
    redirect_to root_url
  end

  private

  def oauth2_error(e)
    flash[:error] = {
      :title => e.response[:error][:type],
      :message => e.response[:error][:message]
    }
    redirect_to root_url
  end
end
